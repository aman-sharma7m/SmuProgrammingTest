#############Question_1_start##################
import math

def capsule_volume(r, a):
  return round(math.pi * r**2 * ((4/3)*r+a),3)

def capsule_surface_area(r, a):
  return round(2 * math.pi * r * (2*r + a),4)

def capsule_circumference(r):
  return round(2 * math.pi * r,4)

def main():
  N = int(input("Enter the value of 'N': "))
  a = float(input("Enter the value of 'a': "))

  print('This program prints the volume, surface area\
& circumference of a capsule having radius r ranging from 6 to N\
 in increments of 6 and side lengths a.')
  print(end='\n')
  print('{:<8} {:<15} {:<15} {:<10}'.format('Radius','Volume','Surface Area','Circumference'))
  print('-'*70)

  for r in range(6, N + 1, 6):
    vol = capsule_volume(r, a)
    surf_area = capsule_surface_area(r, a)
    circ = capsule_circumference(r)
    print('{:<8} {:<15} {:<15} {:<10}'.format(r,vol,surf_area,circ))

if __name__ == '__main__':
  main()

#############Question_1_end##################

#############Question_2_start##################
def print_detail(data):
  max_income=0
  max_income_name=''
  max_npv=0
  max_npv_name=''
  for key in data.keys():
    print('{:^80}'.format(key))
    print('-'*80)
    print('{:<10} | {:^20} | {:^20} | {:>20}'.format('Year','Cash','PV Factor','Amount'))
    print('{:<10} | {:^20} | {:^20} | {:>20}'.format('','Inflows/Outflows','',''))
    print('-'*80)
    for i in range(len(data[key]['Year'])):
      print('{:<10} | ${:^20,.2f} | {:^20} | ${:>20,.2f}'.format(data[key]['Year'][i],data[key]['Cash_Inflows/Outflows'][i],data[key]['PV Factor'][i],data[key]['Amount'][i]))
    print('Total Income: ${:,.2f}'.format(data[key]['total_income']))
    print('Present Value of Future Benefits: ${:,.2f}'.format(data[key]['pv_fb']))
    print('Present Value of Future Costs: ${:,.2f}'.format(data[key]['pv_fc']))
    print('Net Present Value(NPV): ${:,.2f}'.format(data[key]['npv']))
    print()

    if data[key]['total_income']>max_income:
      max_income=data[key]['total_income']
      max_income_name=key
    elif data[key]['total_income']==max_income:
      if data[key]['npv']>max_npv:
        max_income=data[key]['total_income']
        max_income_name=key

    if data[key]['npv']>=max_npv:
      max_npv=data[key]['npv']
      max_npv_name=key
    elif data[key]['npv']==max_income:
      if data[key]['total_income']>max_npv:
        max_npv=data[key]['npv']
        max_npv_name=key
  
  print('The Highest income is generated by project: {}'.format(max_income_name))
  print('The project the company should be executing is: {}'.format(max_npv_name))


def main():
  data={}
  num_projects=int(input('Enter the number of projects: '))
  for num in range(num_projects):
      print()
      prj_name=input('Enter the name of the project: ')
      prj_upfront_cost=float(input('Enter the upfront cost for project {}: '.format(prj_name)))
      prj_discount_rt=float(input('Enter rate of return or discount rate (in %): '))
      prj_duration=int(input('Enter the duration (in years): '))
      data[prj_name]={}
      data[prj_name]['Cash_Inflows/Outflows']=[]
      data[prj_name]['Year']=[]
      data[prj_name]['PV Factor']=[]
      data[prj_name]['Amount']=[]
      for dur in range(1,prj_duration+1):
          data[prj_name]['Cash_Inflows/Outflows'].append(float(input('Enter the cash inflow-outflows during year {}: '.format(dur))))
          data[prj_name]['Year'].append(dur)
          data[prj_name]['PV Factor'].append(round(1/(1+prj_discount_rt/100)**dur,4))
          data[prj_name]['Amount'].append(round(data[prj_name]['Cash_Inflows/Outflows'][dur-1]*data[prj_name]['PV Factor'][dur-1],2))
      
      prj_total_income=round(sum(data[prj_name]['Cash_Inflows/Outflows']),2)
      prj_pv_fb=round(sum(data[prj_name]['Amount']),2)
      prj_pv_fc=round(prj_upfront_cost,2)
      prj_npv=round(prj_pv_fb-prj_pv_fc,2)

      data[prj_name]['total_income']=prj_total_income
      data[prj_name]['npv']=prj_npv
      data[prj_name]['pv_fb']=prj_pv_fb
      data[prj_name]['pv_fc']=prj_pv_fc
  print()
  print_detail(data)


if __name__=='__main__':
   main()
#############Question_2_end##################

#############Question_3_start##################

create table Emp_details (
EmployeeId int not null primary key,
Department	varchar(255) not null,
EmployeeName varchar(255) not null 
);

create table vacation_details (
EmployeeId int not null,
VacationYear year not null default 2000,
VacationDays int not null,
CONSTRAINT empYr PRIMARY KEY (EmployeeId,VacationYear)
);

INSERT INTO Emp_details VALUES
(12,'Sales','Luke Ye'),
(13,'Marketing','Mark Brown'),
(14,'Management','John Smith'),
(15,'Marketing','Mark Brown'),
(16,'Engineering','James Tevlin'),
(17,'HR','Ross Becker');

INSERT INTO vacation_details VALUES
(12,2011,6),
(12,2012,1),
(12,2013,2),
(13,2012,7),
(14,2011,13),
(15,2013,8),
(15,2014,2),
(16,2011,4),
(16,2012,3),
(17,2012,4),
(17,2013,2);


select * from Emp_details;
select * from vacation_details;
select a.EmployeeId,a.EmployeeName,a.Department,b.VacationYear,b.VacationDays  
from Emp_details as a inner join vacation_details as b on a.EmployeeId=b.EmployeeId
order by a.EmployeeName , b.VacationYear; 

#############Question_3_end##################